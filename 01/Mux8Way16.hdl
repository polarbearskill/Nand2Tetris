// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:
Mux(a=a[0],b=b[0],sel=sel[0],out=w0);
Mux(a=c[0],b=d[0],sel=sel[0],out=x0);
Mux(a=e[0],b=f[0],sel=sel[0],out=y0);
Mux(a=g[0],b=h[0],sel=sel[0],out=z0);

Mux(a=w0,b=x0,sel=sel[1],out=m0);
Mux(a=y0,b=z0,sel=sel[1],out=n0);

Mux(a=m0,b=n0,sel=sel[2],out=out[0]);

Mux(a=a[1],b=b[1],sel=sel[0],out=w1);
Mux(a=c[1],b=d[1],sel=sel[0],out=x1);
Mux(a=e[1],b=f[1],sel=sel[0],out=y1);
Mux(a=g[1],b=h[1],sel=sel[0],out=z1);

Mux(a=w1,b=x1,sel=sel[1],out=m1);
Mux(a=y1,b=z1,sel=sel[1],out=n1);

Mux(a=m1,b=n1,sel=sel[2],out=out[1]);

Mux(a=a[2],b=b[2],sel=sel[0],out=w2);
Mux(a=c[2],b=d[2],sel=sel[0],out=x2);
Mux(a=e[2],b=f[2],sel=sel[0],out=y2);
Mux(a=g[2],b=h[2],sel=sel[0],out=z2);

Mux(a=w2,b=x2,sel=sel[1],out=m2);
Mux(a=y2,b=z2,sel=sel[1],out=n2);

Mux(a=m2,b=n2,sel=sel[2],out=out[2]);

Mux(a=a[3],b=b[3],sel=sel[0],out=w3);
Mux(a=c[3],b=d[3],sel=sel[0],out=x3);
Mux(a=e[3],b=f[3],sel=sel[0],out=y3);
Mux(a=g[3],b=h[3],sel=sel[0],out=z3);

Mux(a=w3,b=x3,sel=sel[1],out=m3);
Mux(a=y3,b=z3,sel=sel[1],out=n3);

Mux(a=m3,b=n3,sel=sel[2],out=out[3]);

Mux(a=a[4],b=b[4],sel=sel[0],out=w4);
Mux(a=c[4],b=d[4],sel=sel[0],out=x4);
Mux(a=e[4],b=f[4],sel=sel[0],out=y4);
Mux(a=g[4],b=h[4],sel=sel[0],out=z4);

Mux(a=w4,b=x4,sel=sel[1],out=m4);
Mux(a=y4,b=z4,sel=sel[1],out=n4);

Mux(a=m4,b=n4,sel=sel[2],out=out[4]);

Mux(a=a[5],b=b[5],sel=sel[0],out=w5);
Mux(a=c[5],b=d[5],sel=sel[0],out=x5);
Mux(a=e[5],b=f[5],sel=sel[0],out=y5);
Mux(a=g[5],b=h[5],sel=sel[0],out=z5);

Mux(a=w5,b=x5,sel=sel[1],out=m5);
Mux(a=y5,b=z5,sel=sel[1],out=n5);

Mux(a=m5,b=n5,sel=sel[2],out=out[5]);

Mux(a=a[6],b=b[6],sel=sel[0],out=w6);
Mux(a=c[6],b=d[6],sel=sel[0],out=x6);
Mux(a=e[6],b=f[6],sel=sel[0],out=y6);
Mux(a=g[6],b=h[6],sel=sel[0],out=z6);

Mux(a=w6,b=x6,sel=sel[1],out=m6);
Mux(a=y6,b=z6,sel=sel[1],out=n6);

Mux(a=m6,b=n6,sel=sel[2],out=out[6]);

Mux(a=a[7],b=b[7],sel=sel[0],out=w7);
Mux(a=c[7],b=d[7],sel=sel[0],out=x7);
Mux(a=e[7],b=f[7],sel=sel[0],out=y7);
Mux(a=g[7],b=h[7],sel=sel[0],out=z7);

Mux(a=w7,b=x7,sel=sel[1],out=m7);
Mux(a=y7,b=z7,sel=sel[1],out=n7);

Mux(a=m7,b=n7,sel=sel[2],out=out[7]);

Mux(a=a[8],b=b[8],sel=sel[0],out=w8);
Mux(a=c[8],b=d[8],sel=sel[0],out=x8);
Mux(a=e[8],b=f[8],sel=sel[0],out=y8);
Mux(a=g[8],b=h[8],sel=sel[0],out=z8);

Mux(a=w8,b=x8,sel=sel[1],out=m8);
Mux(a=y8,b=z8,sel=sel[1],out=n8);

Mux(a=m8,b=n8,sel=sel[2],out=out[8]);

Mux(a=a[9],b=b[9],sel=sel[0],out=w9);
Mux(a=c[9],b=d[9],sel=sel[0],out=x9);
Mux(a=e[9],b=f[9],sel=sel[0],out=y9);
Mux(a=g[9],b=h[9],sel=sel[0],out=z9);

Mux(a=w9,b=x9,sel=sel[1],out=m9);
Mux(a=y9,b=z9,sel=sel[1],out=n9);

Mux(a=m9,b=n9,sel=sel[2],out=out[9]);

Mux(a=a[10],b=b[10],sel=sel[0],out=w10);
Mux(a=c[10],b=d[10],sel=sel[0],out=x10);
Mux(a=e[10],b=f[10],sel=sel[0],out=y10);
Mux(a=g[10],b=h[10],sel=sel[0],out=z10);

Mux(a=w10,b=x10,sel=sel[1],out=m10);
Mux(a=y10,b=z10,sel=sel[1],out=n10);

Mux(a=m10,b=n10,sel=sel[2],out=out[10]);

Mux(a=a[11],b=b[11],sel=sel[0],out=w11);
Mux(a=c[11],b=d[11],sel=sel[0],out=x11);
Mux(a=e[11],b=f[11],sel=sel[0],out=y11);
Mux(a=g[11],b=h[11],sel=sel[0],out=z11);

Mux(a=w11,b=x11,sel=sel[1],out=m11);
Mux(a=y11,b=z11,sel=sel[1],out=n11);

Mux(a=m11,b=n11,sel=sel[2],out=out[11]);

Mux(a=a[12],b=b[12],sel=sel[0],out=w12);
Mux(a=c[12],b=d[12],sel=sel[0],out=x12);
Mux(a=e[12],b=f[12],sel=sel[0],out=y12);
Mux(a=g[12],b=h[12],sel=sel[0],out=z12);

Mux(a=w12,b=x12,sel=sel[1],out=m12);
Mux(a=y12,b=z12,sel=sel[1],out=n12);

Mux(a=m12,b=n12,sel=sel[2],out=out[12]);

Mux(a=a[13],b=b[13],sel=sel[0],out=w13);
Mux(a=c[13],b=d[13],sel=sel[0],out=x13);
Mux(a=e[13],b=f[13],sel=sel[0],out=y13);
Mux(a=g[13],b=h[13],sel=sel[0],out=z13);

Mux(a=w13,b=x13,sel=sel[1],out=m13);
Mux(a=y13,b=z13,sel=sel[1],out=n13);

Mux(a=m13,b=n13,sel=sel[2],out=out[13]);

Mux(a=a[14],b=b[14],sel=sel[0],out=w14);
Mux(a=c[14],b=d[14],sel=sel[0],out=x14);
Mux(a=e[14],b=f[14],sel=sel[0],out=y14);
Mux(a=g[14],b=h[14],sel=sel[0],out=z14);

Mux(a=w14,b=x14,sel=sel[1],out=m14);
Mux(a=y14,b=z14,sel=sel[1],out=n14);

Mux(a=m14,b=n14,sel=sel[2],out=out[14]);

Mux(a=a[15],b=b[15],sel=sel[0],out=w15);
Mux(a=c[15],b=d[15],sel=sel[0],out=x15);
Mux(a=e[15],b=f[15],sel=sel[0],out=y15);
Mux(a=g[15],b=h[15],sel=sel[0],out=z15);

Mux(a=w15,b=x15,sel=sel[1],out=m15);
Mux(a=y15,b=z15,sel=sel[1],out=n15);

Mux(a=m15,b=n15,sel=sel[2],out=out[15]);


}